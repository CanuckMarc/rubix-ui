// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {assistmodel} from '../models';
import {main} from '../models';
import {model} from '../models';
import {storage} from '../models';
import {installer} from '../models';
import {edge} from '../models';
import {store} from '../models';
import {networking} from '../models';
import {datelib} from '../models';
import {assitcli} from '../models';

export function AddHost(arg1:string,arg2:assistmodel.Host):Promise<assistmodel.Host>;

export function DeletePointBulk(arg1:string,arg2:string,arg3:Array<main.UUIDs>):Promise<any>;

export function GetHost(arg1:string,arg2:string):Promise<assistmodel.Host>;

export function EditHostNetwork(arg1:string,arg2:string,arg3:assistmodel.Network):Promise<assistmodel.Network>;

export function EditNetwork(arg1:string,arg2:string,arg3:string,arg4:model.Network):Promise<model.Network>;

export function GetNetworkBackupsByUUID(arg1:string,arg2:string,arg3:string):Promise<Array<storage.Backup>>;

export function GetNetworkByPluginName(arg1:string,arg2:string,arg3:string,arg4:boolean):Promise<model.Network>;

export function AddConnection(arg1:storage.RubixConnection):Promise<storage.RubixConnection>;

export function DeleteConnection(arg1:string):Promise<string>;

export function GetConnectionSchema():Promise<main.ConnectionSchema>;

export function GetConnections():Promise<Array<storage.RubixConnection>>;

export function GetScannerSchema():Promise<any>;

export function PingHost(arg1:string,arg2:string):Promise<boolean>;

export function Scanner(arg1:string,arg2:string,arg3:number,arg4:Array<string>):Promise<any>;

export function DeleteBackupBulk(arg1:Array<main.UUIDs>):Promise<any>;

export function DeleteNetworkBulk(arg1:string,arg2:string,arg3:Array<main.UUIDs>):Promise<any>;

export function EditFlowNetwork(arg1:string,arg2:string,arg3:string,arg4:model.FlowNetwork):Promise<model.FlowNetwork>;

export function GetBackupsByApplication(arg1:string,arg2:string,arg3:boolean):Promise<Array<storage.Backup>>;

export function AddConsumer(arg1:string,arg2:string,arg3:model.Consumer):Promise<model.Consumer>;

export function DeleteHostNetworkBulk(arg1:string,arg2:Array<main.UUIDs>):Promise<any>;

export function GetLocation(arg1:string,arg2:string):Promise<assistmodel.Location>;

export function GetProducers(arg1:string,arg2:string):Promise<Array<model.Producer>>;

export function GetBackups():Promise<Array<storage.Backup>>;

export function GetBackupsNoData():Promise<Array<storage.Backup>>;

export function GetFlowNetworkClones(arg1:string,arg2:string,arg3:boolean):Promise<Array<model.FlowNetworkClone>>;

export function GetLocationSchema(arg1:string):Promise<any>;

export function GetNetworkBackupsByPlugin(arg1:string,arg2:string,arg3:string):Promise<Array<storage.Backup>>;

export function GetSetting(arg1:string):Promise<storage.Settings>;

export function ImportBackup(arg1:storage.Backup):Promise<string>;

export function AddStream(arg1:string,arg2:string,arg3:Array<string>,arg4:model.Stream):Promise<model.Stream>;

export function GetBacnetDevicePoints(arg1:string,arg2:string,arg3:string,arg4:boolean,arg5:boolean):Promise<Array<model.Point>>;

export function GetDevices(arg1:string,arg2:string,arg3:boolean):Promise<Array<model.Device>>;

export function GetPlugin(arg1:string,arg2:string,arg3:string):Promise<model.PluginConf>;

export function AddPoint(arg1:string,arg2:string,arg3:model.Point):Promise<model.Point>;

export function DeleteFlowNetworkCloneBulk(arg1:string,arg2:string,arg3:Array<main.UUIDs>):Promise<any>;

export function EditConsumer(arg1:string,arg2:string,arg3:string,arg4:model.Consumer):Promise<model.Consumer>;

export function GetFlowNetwork(arg1:string,arg2:string,arg3:string,arg4:boolean):Promise<model.FlowNetwork>;

export function EditStream(arg1:string,arg2:string,arg3:string,arg4:model.Stream):Promise<model.Stream>;

export function GetHostTime(arg1:string,arg2:string):Promise<any>;

export function GetPoints(arg1:string,arg2:string):Promise<Array<model.Point>>;

export function UpdateLocation(arg1:string,arg2:string,arg3:assistmodel.Location):Promise<assistmodel.Location>;

export function GetFlowDeviceSchema(arg1:string,arg2:string,arg3:string):Promise<any>;

export function ImportDevicesBulk(arg1:string,arg2:string,arg3:string,arg4:string):Promise<main.BulkAddResponse>;

export function AddLocation(arg1:string,arg2:assistmodel.Location):Promise<assistmodel.Location>;

export function EnablePluginBulk(arg1:string,arg2:string,arg3:Array<main.PluginUUIDs>):Promise<any>;

export function GetFlowNetworkClone(arg1:string,arg2:string,arg3:string,arg4:boolean):Promise<model.FlowNetworkClone>;

export function GetServerNetworking(arg1:string):Promise<any>;

export function WiresBackupRestore(arg1:string,arg2:string,arg3:string):Promise<any>;

export function DeleteProducerBulk(arg1:string,arg2:string,arg3:Array<main.UUIDs>):Promise<any>;

export function EdgeListAppsAndService(arg1:string,arg2:string):Promise<Array<installer.InstalledServices>>;

export function GetHostInterfaces(arg1:string,arg2:string):Promise<edge.InterfaceNames>;

export function GitDownloadRelease(arg1:string,arg2:string):Promise<store.Release>;

export function StoreDownloadApp(arg1:string,arg2:string,arg3:string,arg4:string,arg5:boolean):Promise<store.InstallResponse>;

export function DeleteBackup(arg1:string):Promise<string>;

export function DeletePoint(arg1:string,arg2:string,arg3:string):Promise<any>;

export function EnablePlugin(arg1:string,arg2:string,arg3:string):Promise<any>;

export function GetPluginsNames(arg1:string,arg2:string):Promise<Array<main.PluginName>>;

export function GetProducerClones(arg1:string,arg2:string):Promise<Array<model.Producer>>;

export function ImportPointBulk(arg1:string,arg2:string,arg3:string,arg4:string):Promise<main.BulkAddResponse>;

export function StoreDownloadAll(arg1:string,arg2:string,arg3:boolean):Promise<Array<store.App>>;

export function DeleteFlowNetworkBulk(arg1:string,arg2:string,arg3:Array<main.UUIDs>):Promise<any>;

export function EditProducer(arg1:string,arg2:string,arg3:string,arg4:model.Producer):Promise<model.Producer>;

export function GetLocations(arg1:string):Promise<Array<assistmodel.Location>>;

export function UpdateConnection(arg1:string,arg2:storage.RubixConnection):Promise<storage.RubixConnection>;

export function DeleteAllConnections():Promise<main.DeleteAllConnections>;

export function GetFlowNetworkSchema(arg1:string,arg2:string,arg3:string):Promise<any>;

export function GetReleaseByVersion(arg1:string):Promise<store.Release>;

export function DeleteConsumerBulk(arg1:string,arg2:string,arg3:Array<main.UUIDs>):Promise<any>;

export function DeleteFlowNetwork(arg1:string,arg2:string,arg3:string):Promise<any>;

export function DeleteLogBulk(arg1:Array<main.UUIDs>):Promise<any>;

export function ExportBackup(arg1:string):void;

export function GetGitToken(arg1:string,arg2:boolean):Promise<string>;

export function GetHosts(arg1:string):Promise<Array<assistmodel.Host>>;

export function WiresBackup(arg1:string,arg2:string,arg3:string):Promise<storage.Backup>;

export function AddHostNetwork(arg1:string,arg2:assistmodel.Network):Promise<assistmodel.Network>;

export function DeleteDeviceBulk(arg1:string,arg2:string,arg3:Array<main.UUIDs>):Promise<any>;

export function DisablePlugin(arg1:string,arg2:string,arg3:string):Promise<any>;

export function EditPoint(arg1:string,arg2:string,arg3:string,arg4:model.Point):Promise<model.Point>;

export function GetHostActiveNetworks(arg1:string,arg2:string):Promise<any>;

export function GetNetworkDevices(arg1:string,arg2:string,arg3:string):Promise<Array<model.Device>>;

export function GetPcInterfaces():Promise<networking.InterfaceNames>;

export function EdgeAppsInstalledComparedToReleaseVersion(arg1:string,arg2:string,arg3:string):Promise<Array<main.InstalledApps>>;

export function EditDevice(arg1:string,arg2:string,arg3:string,arg4:model.Device):Promise<model.Device>;

export function ExportPointBulk(arg1:string,arg2:string,arg3:string,arg4:string,arg5:Array<string>):Promise<storage.Backup>;

export function GetHostNetwork(arg1:string,arg2:string):Promise<assistmodel.Network>;

export function GetPcTime():Promise<datelib.Time>;

export function GetProducer(arg1:string,arg2:string,arg3:string):Promise<model.Producer>;

export function DeleteLocationBulk(arg1:string,arg2:Array<main.UUIDs>):Promise<any>;

export function GetConnection(arg1:string):Promise<storage.RubixConnection>;

export function GetConsumerClones(arg1:string,arg2:string):Promise<Array<model.Consumer>>;

export function GetHostSchema(arg1:string):Promise<any>;

export function GetReleases():Promise<Array<store.Release>>;

export function DeleteConnectionBulk(arg1:Array<main.UUIDs>):Promise<any>;

export function DeleteFlowNetworkClone(arg1:string,arg2:string,arg3:string):Promise<any>;

export function DeleteHost(arg1:string,arg2:string):Promise<assitcli.Response>;

export function DeleteNetwork(arg1:string,arg2:string,arg3:string):Promise<any>;

export function GetLocationTableSchema(arg1:string):Promise<any>;

export function GetNetworkSchema(arg1:string):Promise<any>;

export function DeleteConsumer(arg1:string,arg2:string,arg3:string):Promise<any>;

export function DisablePluginBulk(arg1:string,arg2:string,arg3:Array<main.PluginUUIDs>):Promise<any>;

export function ImportNetworksBulk(arg1:string,arg2:string,arg3:string):Promise<main.BulkAddResponse>;

export function UpdateSettings(arg1:string,arg2:storage.Settings):Promise<storage.Settings>;

export function GetConsumer(arg1:string,arg2:string,arg3:string):Promise<model.Consumer>;

export function GetHostInternetIP(arg1:string,arg2:string):Promise<edge.InternetIP>;

export function GetPcGetNetworks():Promise<any>;

export function GetPlugins(arg1:string,arg2:string):Promise<Array<model.PluginConf>>;

export function GetRelease(arg1:string):Promise<store.Release>;

export function StoreCheckAppAndVersionExists(arg1:string,arg2:string):Promise<Error>;

export function AddRelease(arg1:string,arg2:string):Promise<store.Release>;

export function EditHost(arg1:string,arg2:string,arg3:assistmodel.Host):Promise<assistmodel.Host>;

export function GetHostNetworks(arg1:string):Promise<Array<assistmodel.Network>>;

export function GetLogs():Promise<any>;

export function GetNetworks(arg1:string,arg2:string,arg3:boolean):Promise<Array<model.Network>>;

export function GetPcGetNetworksSchema():Promise<any>;

export function GetPoint(arg1:string,arg2:string,arg3:string):Promise<model.Point>;

export function GetConsumers(arg1:string,arg2:string):Promise<Array<model.Consumer>>;

export function GetServerTime(arg1:string):Promise<any>;

export function GetStream(arg1:string,arg2:string,arg3:string):Promise<model.Stream>;

export function AddFlowNetwork(arg1:string,arg2:string,arg3:model.FlowNetwork):Promise<model.FlowNetwork>;

export function DeleteProducer(arg1:string,arg2:string,arg3:string):Promise<any>;

export function ExportDevicesBulk(arg1:string,arg2:string,arg3:string,arg4:string,arg5:Array<string>):Promise<storage.Backup>;

export function DeleteStreamBulk(arg1:string,arg2:string,arg3:Array<main.UUIDs>):Promise<any>;

export function GetPluginByName(arg1:string,arg2:string,arg3:string):Promise<model.PluginConf|Error>;

export function HostRubixScan(arg1:string,arg2:string):Promise<any>;

export function AddNetwork(arg1:string,arg2:string,arg3:model.Network):Promise<model.Network>;

export function DeleteHostBulk(arg1:string,arg2:Array<main.UUIDs>):Promise<any>;

export function AppInstallAppOnEdge(arg1:string,arg2:string,arg3:string,arg4:string,arg5:string,arg6:string):Promise<installer.InstallResp>;

export function GetNetworkWithPoints(arg1:string,arg2:string,arg3:string):Promise<model.Network>;

export function GetNetworksWithPoints(arg1:string,arg2:string):Promise<model.Network>;

export function GetStreamClones(arg1:string,arg2:string):Promise<Array<model.StreamClone>>;

export function DeleteStream(arg1:string,arg2:string,arg3:string):Promise<any>;

export function DoBackup(arg1:string,arg2:string,arg3:string,arg4:string,arg5:string,arg6:any):Promise<storage.Backup>;

export function ExportNetworksBulk(arg1:string,arg2:string,arg3:string,arg4:Array<string>):Promise<storage.Backup>;

export function PingRubixAssist(arg1:string):Promise<boolean>;

export function GetStreams(arg1:string,arg2:string):Promise<Array<model.Stream>>;

export function BacnetWhois(arg1:string,arg2:string,arg3:string,arg4:string):Promise<model.Device>;

export function DeleteHostNetwork(arg1:string,arg2:string):Promise<assitcli.Response>;

export function GetDevice(arg1:string,arg2:string,arg3:string,arg4:boolean):Promise<model.Device>;

export function GetLogsByConnection(arg1:string):Promise<any>;

export function GetLogsWithData():Promise<any>;

export function GetNetwork(arg1:string,arg2:string,arg3:string,arg4:boolean):Promise<model.Network>;

export function GetPointsForDevice(arg1:string,arg2:string,arg3:string):Promise<Array<model.Point>>;

export function GitListReleases(arg1:string):Promise<Array<store.ReleaseList>>;

export function DeleteLocation(arg1:string,arg2:string):Promise<assitcli.Response>;

export function GetFlowNetworks(arg1:string,arg2:string,arg3:boolean):Promise<Array<model.FlowNetwork>>;

export function GetFlowPointSchema(arg1:string,arg2:string,arg3:string):Promise<any>;

export function OpenURL(arg1:string):void;

export function AddDevice(arg1:string,arg2:string,arg3:model.Device):Promise<model.Device>;

export function AddProducer(arg1:string,arg2:string,arg3:model.Producer):Promise<model.Producer>;

export function DeleteDevice(arg1:string,arg2:string,arg3:string):Promise<any>;

export function GetBackup(arg1:string):Promise<storage.Backup>;

export function StoreCheckAppExists(arg1:string):Promise<Error>;
